{"version":3,"file":"pb-leaflet-map.js","sources":["../src/pb-map-layer.js","../src/pb-leaflet-map.js"],"sourcesContent":["import { LitElement } from 'lit-element';\n\nconst ignore = ['type', 'url', 'label', 'base', 'show'];\n\n/**\n * Configure a map layer. Should be nested inside `pb-leaflet-map`.\n *\n */\nexport class PbMapLayer extends LitElement {\n    static get properties() {\n        return {\n            /**\n             * Type of the layer: either 'tile' or 'geojson'\n             */\n            type: {\n                type: String\n            },\n            /**\n             * The URL (or URL template) to load layer data from\n             */\n            url: {\n                type: String\n            },\n            /**\n             * Set to indicate that this is a base layer\n             */\n            base: {\n                type: Boolean\n            },\n            /**\n             * Display the layer on the map upon initialization\n             */\n            show: {\n                type: Boolean\n            },\n            /**\n             * A label for the layer to be shown in the layer control\n             */\n            label: {\n                type: String\n            },\n            attribution: {\n                type: String\n            },\n            minZoom: {\n                type: Number,\n                attribute: 'min-zoom'\n            },\n            maxZoom: {\n                type: Number,\n                attribute: 'max-zoom'\n            },\n            zoomOffset: {\n                type: Number,\n                attribute: 'zoom-offset'\n            },\n            opacity: {\n                type: Number\n            },\n            tileSize: {\n                type: Number\n            },\n            id: {\n                type: String\n            },\n            accessToken: {\n                type: String,\n                attribute: 'access-token'\n            }\n        };\n    }\n\n    constructor() {\n        super();\n        this.type = 'tile';\n        this.url = null;\n    }\n\n    get options() {\n        const options = {};\n        Object.keys(PbMapLayer.properties).forEach(key => {\n            if (ignore.indexOf(key) < 0 && this[key]) {\n                options[key] = this[key];\n            }\n        });\n        console.log('<pb-leaflet-map-layer> Options: %o', options);\n        return options;\n    }\n\n    async data() {\n        return new Promise((resolve) => {\n            fetch(this.url)\n                .then((response) => response.json())\n                .then((json) => resolve(json));\n        });\n    }\n}\ncustomElements.define('pb-map-layer', PbMapLayer);","import { LitElement, html, css } from 'lit-element';\nimport \"@lrnwebcomponents/es-global-bridge\";\nimport { pbMixin } from './pb-mixin.js';\nimport { resolveURL } from './utils.js';\nimport './pb-map-layer.js';\n\n/**\n * A wrapper component for [leaflet](https://leafletjs.com/) displaying a map.\n *\n * @slot - may contain a series of `pb-map-layer` configurations\n * @fires pb-leaflet-marker-click - Fires event to be processed by the map upon click\n * @fires pb-update-map - When received, redraws the map to fit markers passed in with the event.\n * Event details should include an array of locations, see `pb-geolocation` event below.\n * @fires pb-update - When received, redraws the map to show markers for all pb-geolocation elements found in the content of the pb-view\n * @fires pb-geolocation - When received, focuses the map on the geocoordinates passed in with the event.\n * The event details should include an object:\n * ```\n * {\n *   coordinates: {\n *         latitude: Number,\n *         longitude: Number\n *   },\n *   label: string - the label to show on mouseover,\n *   zoom: Number - fixed zoom level to zoom to,\n *   fitBounds: Boolean - if true, recompute current zoom level to show all markers\n * }\n * ```\n */\nexport class PbLeafletMap extends pbMixin(LitElement) {\n    static get properties() {\n        return {\n            ...super.properties,\n            latitude: {\n                type: Number\n            },\n            longitude: {\n                type: Number\n            },\n            zoom: {\n                type: Number\n            },\n            crs: {\n                type: String\n            },\n            /**\n             * If set, the map will automatically zoom so it can fit all the markers\n             */\n            fitMarkers: {\n                type: Boolean,\n                attribute: 'fit-markers'\n            },\n            /**\n             * If set, combine markers into clusters if they are located too close together\n             * to display as single markers\n             */\n            cluster: {\n                type: Boolean\n            },\n            /**\n             * Limits up to which zoom level markers are arranged into clusters.\n             * Using a higher zoom level here will result in more markers to be shown.\n             * \n             * Requires `cluster` option to be enabled.\n             */\n            disableClusteringAt: {\n                type: Number,\n                attribute: 'disable-clustering-at'\n            },\n            /**\n             * If enabled, the map will not automatically scroll to the coordinates received via `pb-geolocation`\n             */\n            noScroll: {\n                type: Boolean,\n                attribute: 'no-scroll'\n            },\n            accessToken: {\n                type: String,\n                attribute: 'access-token'\n            },\n            /**\n             * If enabled, the map will remain invisible until an event is received from `pb-geolocation`.\n             * In this case the map also offers a close button to hide it again.\n             */\n            toggle: {\n                type: Boolean\n            },\n            imagesPath: {\n                type: String,\n                attribute: 'images-path'\n            },\n            cssPath: {\n                type: String,\n                attribute: 'css-path'\n            },\n            _map: {\n                type: Object\n            }\n        };\n    }\n\n    constructor() {\n        super();\n        this.latitude = 51.505;\n        this.longitude = -0.09;\n        this.zoom = 15;\n        this.crs = 'EPSG3857';\n        this.accessToken = '';\n        this.imagesPath = '../images/leaflet/';\n        this.cssPath = '../css/leaflet/';\n        this.toggle = false;\n        this.noScroll = false;\n        this.disabled = true;\n        this.cluster = false;\n        this.fitMarkers = false;\n        this.disableClusteringAt = null;\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n\n        this._layers = this.querySelectorAll('pb-map-layer');\n\n        /**\n         * Custom event which passes an array of pb-geolocation within event details\n         * @param {{ detail: any[]; }} ev\n         */\n        this.subscribeTo('pb-update-map', (ev) => {\n            this._markerLayer.clearLayers();\n\n            /**\n             * @param {{ latitude: any; longitude: any; label: any; }} loc\n             */\n            /**\n             * @param {{ latitude: any; longitude: any; label: any; }} loc\n             */\n            ev.detail.forEach((loc) => {\n                const marker = L.marker([loc.latitude, loc.longitude]);\n                if (loc.label) {\n                    marker.bindTooltip(loc.label);\n                }\n                marker.addEventListener('click', () => {\n                    this.emitTo('pb-leaflet-marker-click', loc);\n                });\n                marker.bindTooltip(loc.label);\n                this._markerLayer.addLayer(marker);\n            });\n            this._fitBounds();\n        });\n\n        /**\n         * React to pb-update event triggered by a pb-view\n         * \n         * @param {{ detail: { root: { querySelectorAll: (arg0: string) => any[]; }; }; }} ev\n         */\n        this.subscribeTo('pb-update', (ev) => {\n            this._markerLayer.clearLayers();\n            const locations = ev.detail.root.querySelectorAll('pb-geolocation');\n            /**\n             * @param {{ latitude: any; longitude: any; }} loc\n             */\n            locations.forEach((loc) => {\n                const coords = L.latLng(loc.latitude, loc.longitude);\n                const marker = L.marker(coords).addTo(this._markerLayer);\n                if (loc.label) {\n                    marker.bindTooltip(loc.label);\n                }\n                if (loc.popup) {\n                    marker.bindPopup(loc.popup);\n                }\n                marker.addEventListener('click', () => {\n                    this.emitTo('pb-leaflet-marker-click', loc);\n                });\n            });\n            this._fitBounds();\n        });\n\n        /**\n         * React to events send by pb-geolocation\n         * \n         * @param {{ detail: { coordinates: { latitude: number; longitude: number; }, label: string; }; }} ev\n         */\n        this.subscribeTo('pb-geolocation', (ev) => {\n            if (ev.detail.coordinates) {\n                this.latitude = ev.detail.coordinates.latitude;\n                this.longitude = ev.detail.coordinates.longitude;\n                if (!this._hasMarker(this.latitude, this.longitude)) {\n                    const marker = L.marker([this.latitude, this.longitude]);\n                    marker.addEventListener('click', () => {\n                        this.emitTo('pb-leaflet-marker-click', ev.detail.element);\n                    });\n                    if (ev.detail.label) {\n                        marker.bindTooltip(ev.detail.label);\n                    }\n                    if (ev.detail.popup) {\n                        marker.bindPopup(ev.detail.popup);\n                    }\n                    marker.addTo(this._markerLayer);\n\n                    if (ev.detail.fitBounds) {\n                        this._fitBounds();\n                    }\n\n                    console.log('<pb-leaflet-map> added marker');\n                } else {\n                    console.log('<pb-leaflet-map> Marker already added to map');\n                }\n                if (this.toggle) {\n                    this.disabled = false;\n                }\n                this._locationChanged(this.latitude, this.longitude, ev.detail.zoom);\n            }\n        });\n    }\n\n    firstUpdated() {\n        if (!this.toggle) {\n            this.disabled = false;\n        }\n        window.ESGlobalBridge.requestAvailability();\n        const leafletPath = resolveURL('../lib/leaflet-src.js');\n        const pluginPath = resolveURL('../lib/leaflet.markercluster-src.js');\n        window.ESGlobalBridge.instance.load(\"leaflet\", leafletPath)\n        .then(() => window.ESGlobalBridge.instance.load(\"plugin\", pluginPath));\n        window.addEventListener(\n            \"es-bridge-plugin-loaded\",\n            this._initMap.bind(this),\n            { once: true }\n        );\n    }\n\n    render() {\n        const cssPath = resolveURL(this.cssPath);\n        return html`\n            <link rel=\"Stylesheet\" href=\"${cssPath}/leaflet.css\">\n            <link rel=\"Stylesheet\" href=\"${cssPath}/MarkerCluster.Default.css\">\n            <div id=\"map\" style=\"height: 100%; width: 100%\"></div>\n        `;\n    }\n\n    static get styles() {\n        return css`\n            :host {\n                display: block;\n            }\n\n            :host([disabled]) {\n                visibility: hidden;\n            }\n\n            .close {\n                border-radius: 4px;\n                background-color: #fff;\n                color: inherit;\n                padding: 8px;\n                font-size: 18px;\n                font-weight: bold;\n                text-decoration: none;\n                cursor: pointer;\n            }\n        `;\n    }\n\n    _initMap() {\n        if (this._map) {\n            return;\n        }\n\n        L.Icon.Default.imagePath = resolveURL(this.imagesPath);\n\n        const crs = L.CRS[this.crs] || L.CRS.EPSG3857;\n        this._map = L.map(this.shadowRoot.getElementById('map'), {\n            zoom: this.zoom,\n            center: L.latLng(this.latitude, this.longitude),\n            crs\n        });\n        this._configureLayers();\n\n        if (this.cluster) {\n            const options = {};\n            if (this.disableClusteringAt) {\n                options.disableClusteringAtZoom = this.disableClusteringAt;\n            }\n            this._markerLayer = L.markerClusterGroup(options);\n        } else {\n            this._markerLayer = L.layerGroup();\n        }\n        this._markerLayer.addTo(this._map);\n\n        this.signalReady();\n\n        L.control.scale().addTo(this._map);\n\n        if (this.toggle) {\n            let container;\n            L.Control.CloseButton = L.Control.extend({\n                options: {\n                    position: 'topright'\n                },\n                onAdd: (map) => {\n                    container = L.DomUtil.create('div');\n                    container.className = 'close';\n                    container.innerHTML = 'X';\n                    L.DomEvent.on(container, 'click', this._hide.bind(this));\n                    return container;\n                },\n                onRemove: (map) => {\n                    L.DomEvent.off(container, 'click', this._hide.bind(this));\n                }\n            });\n            L.control.closeButton = (options) => new L.Control.CloseButton(options);\n            L.control.closeButton({ position: 'topright' }).addTo(this._map);\n        }\n    }\n\n    _configureLayers() {\n        if (this._layers.length === 0) {\n            // configure a default layer\n            L.tileLayer('https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/{z}/{x}/{y}?access_token={accessToken}', {\n                attribution: '© <a href=\"https://www.mapbox.com/about/maps/\">Mapbox</a> © <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> <strong><a href=\"https://www.mapbox.com/map-feedback/\" target=\"_blank\">Improve this map</a></strong>',\n                maxZoom: 18,\n                zoomOffset: -1,\n                tileSize: 512,\n                accessToken: this.accessToken\n            }).addTo(this._map);\n            return;\n        }\n        const layers = L.control.layers(null, null, { collapsed: false });\n        this._layers.forEach(config => {\n            let layer;\n            switch (config.type) {\n                case 'geojson':\n                    config.data().then((data) => {\n                        layer = L.geoJSON([data]);\n                        this._addLayer(config, layer, layers);\n                    });\n                    break;\n                default:\n                    layer = L.tileLayer(config.url, config.options);\n                    this._addLayer(config, layer, layers);\n                    break;\n            }\n        });\n        // only show layer control if there's more than one layer\n        if (this._layers.length > 1) {\n            layers.addTo(this._map);\n        }\n        this._layers = null;\n    }\n\n    _addLayer(config, layer, layers) {\n        if (config.show) {\n            layer.addTo(this._map);\n        }\n        if (config.label) {\n            if (config.base) {\n                layers.addBaseLayer(layer, config.label);\n            } else {\n                layers.addOverlay(layer, config.label);\n            }\n        }\n    }\n\n    _fitBounds() {\n        if (!this.fitMarkers) {\n            return;\n        }\n        const bounds = L.latLngBounds();\n        let len = 0;\n        this._markerLayer.eachLayer((layer) => {\n            bounds.extend(layer.getLatLng());\n            len += 1;\n        });\n        if (len === 0) {\n            this._map.fitWorld();\n        } else if (len === 1) {\n            this._map.fitBounds(bounds, {maxZoom: this.zoom});\n        } else {\n            this._map.fitBounds(bounds);\n        }\n    }\n\n    _locationChanged(lat, long, zoom) {\n        if (this._map) {\n            const coords = L.latLng([lat, long]);\n            this._markerLayer.eachLayer((layer) => {\n                if (layer.getLatLng().equals(coords)) {\n                    if (zoom && !this.noScroll) {\n                        layer.openTooltip();\n                        this._map.setView(coords, zoom);\n                    } else if (this.cluster) {\n                        this._markerLayer.zoomToShowLayer(layer, () =>\n                            layer.openTooltip()\n                        );\n                    } else {\n                        layer.openTooltip();\n                        this._map.setView(coords, this.zoom);\n                    }\n                }\n            });\n        }\n    }\n\n    _hasMarker(lat, long) {\n        const coords = L.latLng([lat, long]);\n        let found = false;\n        this._markerLayer.eachLayer((layer) => {\n            if (layer instanceof L.Marker && layer.getLatLng().equals(coords)) {\n                found = true;\n            }\n        });\n        return found;\n    }\n\n    _hide() {\n        this.disabled = true;\n    }\n}\ncustomElements.define('pb-leaflet-map', PbLeafletMap);"],"names":["ignore","PbMapLayer","LitElement","properties","type","String","url","base","Boolean","show","label","attribution","minZoom","Number","attribute","maxZoom","zoomOffset","opacity","tileSize","id","accessToken","constructor","options","Object","keys","forEach","key","indexOf","console","log","data","Promise","resolve","fetch","then","response","json","customElements","define","PbLeafletMap","pbMixin","latitude","longitude","zoom","crs","fitMarkers","cluster","disableClusteringAt","noScroll","toggle","imagesPath","cssPath","_map","disabled","connectedCallback","_layers","querySelectorAll","subscribeTo","ev","_markerLayer","clearLayers","detail","loc","marker","L","bindTooltip","addEventListener","emitTo","addLayer","_fitBounds","locations","root","coords","latLng","addTo","popup","bindPopup","coordinates","_hasMarker","element","fitBounds","_locationChanged","firstUpdated","window","ESGlobalBridge","requestAvailability","leafletPath","resolveURL","pluginPath","instance","load","_initMap","bind","once","render","html","styles","css","Icon","Default","imagePath","CRS","EPSG3857","map","shadowRoot","getElementById","center","_configureLayers","disableClusteringAtZoom","markerClusterGroup","layerGroup","signalReady","control","scale","container","Control","CloseButton","extend","position","onAdd","DomUtil","create","className","innerHTML","DomEvent","on","_hide","onRemove","off","closeButton","length","tileLayer","layers","collapsed","config","layer","geoJSON","_addLayer","addBaseLayer","addOverlay","bounds","latLngBounds","len","eachLayer","getLatLng","fitWorld","lat","long","equals","openTooltip","setView","zoomToShowLayer","found","Marker"],"mappings":"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"}