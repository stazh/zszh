{"version":3,"file":"iron-form-ee64c98d.js","sources":["../node_modules/@polymer/iron-form/iron-form.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-ajax/iron-ajax.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\n`<iron-form>` is a wrapper around the HTML `<form>` element, that can\nvalidate and submit both custom and native HTML elements. Note that this\nis a breaking change from iron-form 1.0, which was a type extension.\n\nIt has two modes: if `allow-redirect` is true, then after the form submission\nyou will be redirected to the server response. Otherwise, if it is false, it\nwill use an `iron-ajax` element to submit the form contents to the server.\n\n  Example:\n\n    <iron-form>\n      <form method=\"get\" action=\"/form/handler\">\n        <input type=\"text\" name=\"name\" value=\"Batman\">\n        <input type=\"checkbox\" name=\"donuts\" checked> I like donuts<br>\n        <paper-checkbox name=\"cheese\" value=\"yes\" checked></paper-checkbox>\n      </form>\n    </iron-form>\n\nBy default, a native `<button>` element will submit this form. However, if you\nwant to submit it from a custom element's click handler, you need to explicitly\ncall the `iron-form`'s `submit` method.\n\n  Example (using `<paper-button>` for the form `<iron-form id=\"myForm\">`):\n\n    <paper-button raised on-click=\"submitForm\">Submit</paper-button>\n\n    function submitForm() {\n      this.$.myForm.submit();\n    }\n\n  or (using `<button>` for a form in the same document):\n\n    <button raised onclick=\"submitForm()\">Submit</button>\n\n    function submitForm() {\n      document.getElementById('myForm').submit();\n    }\n\nIf you are not using the `allow-redirect` mode, then you also have the option of\ncustomizing the request sent to the server. To do so, you can listen to the\n`iron-form-presubmit` event, and modify the form's\n[`iron-ajax`](https://elements.polymer-project.org/elements/iron-ajax) object.\nHowever, If you want to not use `iron-ajax` at all, you can cancel the event and\ndo your own custom submission:\n\n  Example of modifying the request, but still using the build-in form\nsubmission:\n\n    form.addEventListener('iron-form-presubmit', function() {\n      this.request.method = 'put';\n      this.request.params['extraParam'] = 'someValue';\n    });\n\n  Example of bypassing the build-in form submission:\n\n    form.addEventListener('iron-form-presubmit', function(event) {\n      event.preventDefault();\n      var firebase = new Firebase(form.getAttribute('action'));\n      firebase.set(form.serializeForm());\n    });\n\nNote that if you're dynamically creating this element, it's mandatory that you\nfirst create the contained `<form>` element and all its children, and only then\nattach it to the `<iron-form>`:\n\n  var wrapper = document.createElement('iron-form');\n  var form = document.createElement('form');\n  var input = document.createElement('input');\n  form.appendChild(input);\n  document.body.appendChild(wrapper);\n  wrapper.appendChild(form);\n\n@element iron-form\n@hero hero.svg\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n      }\n    </style>\n\n    <!-- This form is used to collect the elements that should be submitted -->\n    <slot></slot>\n\n    <!-- This form is used for submission -->\n    <form id=\"helper\" action\\$=\"[[action]]\" method\\$=\"[[method]]\" enctype\\$=\"[[enctype]]\"></form>\n`,\n\n  is: 'iron-form',\n\n  properties: {\n    /*\n     * Set this to true if you don't want the form to be submitted through an\n     * ajax request, and you want the page to redirect to the action URL\n     * after the form has been submitted.\n     */\n    allowRedirect: {type: Boolean, value: false},\n    /**\n     * HTTP request headers to send. See PolymerElements/iron-ajax for\n     * more details. Only works when `allowRedirect` is false.\n     */\n    headers: {\n      type: Object,\n      value: function() {\n        return {};\n      }\n    },\n    /**\n     * Set the `withCredentials` flag on the request. See\n     * PolymerElements/iron-ajax for more details. Only works when\n     * `allowRedirect` is false.\n     */\n    withCredentials: {type: Boolean, value: false},\n  },\n\n  /**\n   * Fired if the form cannot be submitted because it's invalid.\n   *\n   * @event iron-form-invalid\n   */\n\n  /**\n   * Fired after the form is submitted.\n   *\n   * @event iron-form-submit\n   */\n\n  /**\n   * Fired before the form is submitted.\n   *\n   * @event iron-form-presubmit\n   */\n\n  /**\n   * Fired after the form is reset.\n   *\n   * @event iron-form-reset\n   */\n\n  /**\n   * Fired after the form is submitted and a response is received. An\n   * IronRequestElement is included as the event.detail object.\n   *\n   * @event iron-form-response\n   */\n\n  /**\n   * Fired after the form is submitted and an error is received. An\n   * error message is included in event.detail.error and an\n   * IronRequestElement is included in event.detail.request.\n   *\n   * @event iron-form-error\n   */\n\n  /**\n   * @return {void}\n   */\n  attached: function() {\n    // We might have been detached then re-attached.\n    // Avoid searching again for the <form> if we already found it.\n    if (this._form) {\n      return;\n    }\n    // Search for the `<form>`, if we don't find it, observe for\n    // mutations.\n    this._form = dom(this).querySelector('form');\n    if (this._form) {\n      this._init();\n      // Since some elements might not be upgraded yet at this time,\n      // we won't be able to look into their shadowRoots for submittables.\n      // We wait a tick and check again for any missing submittable default\n      // values.\n      this.async(this._saveInitialValues.bind(this), 1);\n    } else {\n      this._nodeObserver = dom(this).observeNodes(function(mutations) {\n        for (var i = 0; i < mutations.addedNodes.length; i++) {\n          if (mutations.addedNodes[i].tagName === 'FORM') {\n            this._form = mutations.addedNodes[i];\n            // At this point in time, all custom elements are expected\n            // to be upgraded, hence we'll be able to traverse their\n            // shadowRoots.\n            this._init();\n            dom(this).unobserveNodes(this._nodeObserver);\n            this._nodeObserver = null;\n          }\n        }\n      }.bind(this));\n    }\n  },\n\n  /**\n   * @return {void}\n   */\n  detached: function() {\n    if (this._nodeObserver) {\n      dom(this).unobserveNodes(this._nodeObserver);\n      this._nodeObserver = null;\n    }\n  },\n\n  _init: function() {\n    this._form.addEventListener('submit', this.submit.bind(this));\n    this._form.addEventListener('reset', this.reset.bind(this));\n\n    // Save the initial values.\n    this._defaults = this._defaults || new WeakMap();\n    this._saveInitialValues();\n  },\n\n  /**\n   * Saves the values of all form elements that will be used when resetting\n   * the form. Initially called asynchronously on attach. Any time you\n   * call this function, the previously saved values for a form element will\n   * be overwritten.\n   *\n   * This function is useful if you are dynamically adding elements to\n   * the form, or if your elements are asynchronously setting their values.\n   * @return {void}\n   */\n  saveResetValues: function() {\n    this._saveInitialValues(true);\n  },\n\n  /**\n   * @param {boolean=} overwriteValues\n   * @return {void}\n   */\n  _saveInitialValues: function(overwriteValues) {\n    var nodes = this._getValidatableElements();\n    for (var i = 0; i < nodes.length; i++) {\n      var node = nodes[i];\n      if (!this._defaults.has(node) || overwriteValues) {\n        // Submittables are expected to have `value` property,\n        // that's what gets serialized.\n        var defaults = {value: node.value};\n        if ('checked' in node) {\n          defaults.checked = node.checked;\n        }\n        // In 1.x iron-form would reset `invalid`, so\n        // keep it here for backwards compat.\n        if ('invalid' in node) {\n          defaults.invalid = node.invalid;\n        }\n        this._defaults.set(node, defaults);\n      }\n    }\n  },\n\n  /**\n   * Validates all the required elements (custom and native) in the form.\n   * @return {boolean} True if all the elements are valid.\n   */\n  validate: function() {\n    // If you've called this before distribution happened, bail out.\n    if (!this._form) {\n      return false;\n    }\n\n    if (this._form.getAttribute('novalidate') === '')\n      return true;\n\n    // Start by making the form check the native elements it knows about.\n    var valid = this._form.checkValidity();\n    var elements = this._getValidatableElements();\n\n    // Go through all the elements, and validate the custom ones.\n    for (var el, i = 0; el = elements[i], i < elements.length; i++) {\n      // This is weird to appease the compiler. We assume the custom element\n      // has a validate() method, otherwise we can't check it.\n      var validatable = /** @type {{validate: (function() : boolean)}} */ (el);\n      if (validatable.validate) {\n        valid = !!validatable.validate() && valid;\n      }\n    }\n    return valid;\n  },\n\n  /**\n   * Submits the form.\n   *\n   * @param {Event=} event\n   * @return {void}\n   */\n  submit: function(event) {\n    // We are not using this form for submission, so always cancel its event.\n    if (event) {\n      event.preventDefault();\n    }\n\n    // If you've called this before distribution happened, bail out.\n    if (!this._form) {\n      return;\n    }\n\n    if (!this.validate()) {\n      this.fire('iron-form-invalid');\n      return;\n    }\n\n    // Remove any existing children in the submission form (from a previous\n    // submit).\n    this.$.helper.textContent = '';\n\n    var json = this.serializeForm();\n\n    // If we want a redirect, submit the form natively.\n    if (this.allowRedirect) {\n      // If we're submitting the form natively, then create a hidden element for\n      // each of the values.\n      for (var element in json) {\n        this.$.helper.appendChild(\n            this._createHiddenElement(element, json[element]));\n      }\n\n      // Copy the original form attributes.\n      this.$.helper.action = this._form.getAttribute('action');\n      this.$.helper.method = this._form.getAttribute('method') || 'GET';\n      this.$.helper.contentType = this._form.getAttribute('enctype') ||\n          'application/x-www-form-urlencoded';\n\n      this.$.helper.submit();\n      this.fire('iron-form-submit');\n    } else {\n      this._makeAjaxRequest(json);\n    }\n  },\n\n  /**\n   * Resets the form to the default values.\n   *\n   * @param {Event=} event\n   * @return {void}\n   */\n  reset: function(event) {\n    // We are not using this form for submission, so always cancel its event.\n    if (event)\n      event.preventDefault();\n\n    // If you've called this before distribution happened, bail out.\n    if (!this._form) {\n      return;\n    }\n\n    // Ensure the native form fired the `reset` event.\n    // User might have bound `<button on-click=\"_resetIronForm\">`, or directly\n    // called `ironForm.reset()`. In these cases we want to first reset the\n    // native form.\n    if (!event || event.type !== 'reset' || event.target !== this._form) {\n      this._form.reset();\n      return;\n    }\n\n    // Load the initial values.\n    var nodes = this._getValidatableElements();\n    for (var i = 0; i < nodes.length; i++) {\n      var node = nodes[i];\n      if (this._defaults.has(node)) {\n        var defaults = this._defaults.get(node);\n        for (var propName in defaults) {\n          node[propName] = defaults[propName];\n        }\n      }\n    }\n\n    this.fire('iron-form-reset');\n  },\n\n  /**\n   * Serializes the form as will be used in submission. Note that `serialize`\n   * is a Polymer reserved keyword, so calling `someIronForm`.serialize()`\n   * will give you unexpected results.\n   * @return {!Object<string, *>} An object containing name-value pairs for elements that\n   *                  would be submitted.\n   */\n  serializeForm: function() {\n    // Only elements that have a `name` and are not disabled are submittable.\n    var elements = this._getSubmittableElements();\n    var json = {};\n    for (var i = 0; i < elements.length; i++) {\n      var values = this._serializeElementValues(elements[i]);\n      for (var v = 0; v < values.length; v++) {\n        this._addSerializedElement(json, elements[i].name, values[v]);\n      }\n    }\n    return json;\n  },\n\n  _handleFormResponse: function(event) {\n    this.fire('iron-form-response', event.detail);\n  },\n\n  _handleFormError: function(event) {\n    this.fire('iron-form-error', event.detail);\n  },\n\n  _makeAjaxRequest: function(json) {\n    // Initialize the iron-ajax element if we haven't already.\n    if (!this.request) {\n      this.request = document.createElement('iron-ajax');\n      this.request.addEventListener(\n          'response', this._handleFormResponse.bind(this));\n      this.request.addEventListener('error', this._handleFormError.bind(this));\n    }\n\n    // Native forms can also index elements magically by their name (can't make\n    // this up if I tried) so we need to get the correct attributes, not the\n    // elements with those names.\n    this.request.url = this._form.getAttribute('action');\n    this.request.method = this._form.getAttribute('method') || 'GET';\n    this.request.contentType = this._form.getAttribute('enctype') ||\n        'application/x-www-form-urlencoded';\n    this.request.withCredentials = this.withCredentials;\n    this.request.headers = this.headers;\n\n    if (this._form.method.toUpperCase() === 'POST') {\n      this.request.body = json;\n    } else {\n      this.request.params = json;\n    }\n\n    // Allow for a presubmit hook\n    var event = this.fire('iron-form-presubmit', {}, {cancelable: true});\n    if (!event.defaultPrevented) {\n      this.request.generateRequest();\n      this.fire('iron-form-submit', json);\n    }\n  },\n\n  _getValidatableElements: function() {\n    return this._findElements(\n        this._form, true /* ignoreName */, false /* skipSlots */);\n  },\n\n  _getSubmittableElements: function() {\n    return this._findElements(\n        this._form, false /* ignoreName */, false /* skipSlots */);\n  },\n\n  /**\n   * Traverse the parent element to find and add all submittable nodes to\n   * `submittable`.\n   * @param  {!Node} parent The parent node\n   * @param  {!boolean} ignoreName  Whether the name of the submittable nodes should be disregarded\n   * @param  {!boolean} skipSlots  Whether to skip traversing of slot elements\n   * @param  {!Array<!Node>=} submittable Reference to the array of submittables\n   * @return {!Array<!Node>}\n   * @private\n   */\n  _findElements: function(parent, ignoreName, skipSlots, submittable) {\n    submittable = submittable || [];\n    var nodes = dom(parent).querySelectorAll('*');\n    for (var i = 0; i < nodes.length; i++) {\n      // An element is submittable if it is not disabled, and if it has a\n      // name attribute.\n      if (!skipSlots &&\n          (nodes[i].localName === 'slot' || nodes[i].localName === 'content')) {\n        this._searchSubmittableInSlot(submittable, nodes[i], ignoreName);\n      } else {\n        this._searchSubmittable(submittable, nodes[i], ignoreName);\n      }\n    }\n    return submittable;\n  },\n\n  /**\n   * Traverse the distributed nodes of a slot or content element\n   * and add all submittable nodes to `submittable`.\n   * @param  {!Array<!Node>} submittable Reference to the array of submittables\n   * @param  {!Node} node The slot or content node\n   * @param  {!boolean} ignoreName  Whether the name of the submittable nodes should be disregarded\n   * @return {void}\n   * @private\n   */\n  _searchSubmittableInSlot: function(submittable, node, ignoreName) {\n    var assignedNodes = dom(node).getDistributedNodes();\n\n    for (var i = 0; i < assignedNodes.length; i++) {\n      if (assignedNodes[i].nodeType === Node.TEXT_NODE) {\n        continue;\n      }\n\n      // Note: assignedNodes does not contain <slot> or <content> because\n      // getDistributedNodes flattens the tree.\n      this._searchSubmittable(submittable, assignedNodes[i], ignoreName);\n      var nestedAssignedNodes = dom(assignedNodes[i]).querySelectorAll('*');\n      for (var j = 0; j < nestedAssignedNodes.length; j++) {\n        this._searchSubmittable(\n            submittable, nestedAssignedNodes[j], ignoreName);\n      }\n    }\n  },\n\n  /**\n   * Traverse the distributed nodes of a slot or content element\n   * and add all submittable nodes to `submittable`.\n   * @param  {!Array<!Node>} submittable Reference to the array of submittables\n   * @param  {!Node} node The node to be\n   * @param  {!boolean} ignoreName  Whether the name of the submittable nodes should be disregarded\n   * @return {void}\n   * @private\n   */\n  _searchSubmittable: function(submittable, node, ignoreName) {\n    if (this._isSubmittable(node, ignoreName)) {\n      submittable.push(node);\n    } else if (node.root) {\n      this._findElements(\n          node.root, ignoreName, true /* skipSlots */, submittable);\n    }\n  },\n\n  /**\n   * An element is submittable if it is not disabled, and if it has a\n   * 'name' attribute. If we ignore the name, check if is validatable.\n   * This allows `_findElements` to decide if to explore an element's shadowRoot\n   * or not: an element implementing `validate()` is considered validatable, and\n   * we don't search for validatables in its shadowRoot.\n   * @param {!Node} node\n   * @param {!boolean} ignoreName\n   * @return {boolean}\n   * @private\n   */\n  _isSubmittable: function(node, ignoreName) {\n    return (\n        !node.disabled &&\n        (ignoreName ? node.name || typeof node.validate === 'function' :\n                      node.name));\n  },\n\n  _serializeElementValues: function(element) {\n    // We will assume that every custom element that needs to be serialized\n    // has a `value` property, and it contains the correct value.\n    // The only weird one is an element that implements\n    // IronCheckedElementBehaviour, in which case like the native checkbox/radio\n    // button, it's only used when checked. For native elements, from\n    // https://www.w3.org/TR/html5/forms.html#the-form-element. Native\n    // submittable elements: button, input, keygen, object, select, textarea;\n    // 1. We will skip `keygen and `object` for this iteration, and deal with\n    // them if they're actually required.\n    // 2. <button> and <textarea> have a `value` property, so they behave like\n    //    the custom elements.\n    // 3. <select> can have multiple options selected, in which case its\n    //    `value` is incorrect, and we must use the values of each of its\n    //    `selectedOptions`\n    // 4. <input> can have a whole bunch of behaviours, so it's handled\n    // separately.\n    // 5. Buttons are hard. The button that was clicked to submit the form\n    //    is the one who's name/value gets sent to the server.\n    var tag = element.tagName.toLowerCase();\n    if (tag === 'button' ||\n        (tag === 'input' &&\n         (element.type === 'submit' || element.type === 'reset'))) {\n      return [];\n    }\n\n    if (tag === 'select') {\n      return this._serializeSelectValues(element);\n    } else if (tag === 'input') {\n      return this._serializeInputValues(element);\n    } else {\n      if (element['_hasIronCheckedElementBehavior'] && !element.checked)\n        return [];\n      return [element.value];\n    }\n  },\n\n  _serializeSelectValues: function(element) {\n    var values = [];\n\n    // A <select multiple> has an array of options, some of which can be\n    // selected.\n    for (var i = 0; i < element.options.length; i++) {\n      if (element.options[i].selected) {\n        values.push(element.options[i].value)\n      }\n    }\n    return values;\n  },\n\n  _serializeInputValues: function(element) {\n    // Most of the inputs use their 'value' attribute, with the exception\n    // of radio buttons, checkboxes and file.\n    var type = element.type.toLowerCase();\n\n    // Don't do anything for unchecked checkboxes/radio buttons.\n    // Don't do anything for file, since that requires a different request.\n    if (((type === 'checkbox' || type === 'radio') && !element.checked) ||\n        type === 'file') {\n      return [];\n    }\n    return [element.value];\n  },\n\n  _createHiddenElement: function(name, value) {\n    var input = document.createElement('input');\n    input.setAttribute('type', 'hidden');\n    input.setAttribute('name', name);\n    input.setAttribute('value', value);\n    return input;\n  },\n\n  _addSerializedElement: function(json, name, value) {\n    // If the name doesn't exist, add it. Otherwise, serialize it to\n    // an array,\n    if (json[name] === undefined) {\n      json[name] = value;\n    } else {\n      if (!Array.isArray(json[name])) {\n        json[name] = [json[name]];\n      }\n      json[name].push(value);\n    }\n  }\n});\n"],"names":["Polymer","_template","html","is","properties","allowRedirect","type","Boolean","value","headers","Object","withCredentials","attached","_form","dom","querySelector","_init","async","_saveInitialValues","bind","_nodeObserver","observeNodes","mutations","i","addedNodes","length","tagName","unobserveNodes","detached","addEventListener","submit","reset","_defaults","WeakMap","saveResetValues","overwriteValues","nodes","_getValidatableElements","node","has","defaults","checked","invalid","set","validate","getAttribute","valid","checkValidity","elements","el","validatable","event","preventDefault","fire","$","helper","textContent","json","serializeForm","element","appendChild","_createHiddenElement","action","method","contentType","_makeAjaxRequest","target","get","propName","_getSubmittableElements","values","_serializeElementValues","v","_addSerializedElement","name","_handleFormResponse","detail","_handleFormError","request","document","createElement","url","toUpperCase","body","params","cancelable","defaultPrevented","generateRequest","_findElements","parent","ignoreName","skipSlots","submittable","querySelectorAll","localName","_searchSubmittableInSlot","_searchSubmittable","assignedNodes","getDistributedNodes","nodeType","Node","TEXT_NODE","nestedAssignedNodes","j","_isSubmittable","push","root","disabled","tag","toLowerCase","_serializeSelectValues","_serializeInputValues","options","selected","input","setAttribute","undefined","Array","isArray"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,OAAO,CAAC;AACNC,EAAAA,SAAS,EAAEC,IAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbQ;AAeNC,EAAAA,EAAE,EAAE,WAfE;AAiBNC,EAAAA,UAAU,EAAE;AACV;AACJ;AACA;AACA;AACA;AACIC,IAAAA,aAAa,EAAE;AAACC,MAAAA,IAAI,EAAEC,OAAP;AAAgBC,MAAAA,KAAK,EAAE;AAAvB,KANL;;AAOV;AACJ;AACA;AACA;AACIC,IAAAA,OAAO,EAAE;AACPH,MAAAA,IAAI,EAAEI,MADC;AAEPF,MAAAA,KAAK,EAAE,YAAW;AAChB,eAAO,EAAP;AACD;AAJM,KAXC;;AAiBV;AACJ;AACA;AACA;AACA;AACIG,IAAAA,eAAe,EAAE;AAACL,MAAAA,IAAI,EAAEC,OAAP;AAAgBC,MAAAA,KAAK,EAAE;AAAvB;AAtBP,GAjBN;;AA0CN;AACF;AACA;AACA;AACA;;AAEE;AACF;AACA;AACA;AACA;;AAEE;AACF;AACA;AACA;AACA;;AAEE;AACF;AACA;AACA;AACA;;AAEE;AACF;AACA;AACA;AACA;AACA;;AAEE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEE;AACF;AACA;AACEI,EAAAA,QAAQ,EAAE,YAAW;AACnB;AACA;AACA,QAAI,KAAKC,KAAT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"}